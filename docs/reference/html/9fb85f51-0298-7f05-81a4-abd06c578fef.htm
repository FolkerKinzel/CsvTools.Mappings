<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>Int16Converter.TryParse Method</title><meta name="Title" content="TryParse" /><meta name="Help.Id" content="M:FolkerKinzel.CsvTools.Mappings.TypeConverters.Int16Converter.TryParse(System.ReadOnlySpan{System.Char},System.Int16@)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.CsvTools.Mappings.TypeConverters" /><meta name="guid" content="9fb85f51-0298-7f05-81a4-abd06c578fef" /><meta name="Description" content="Tries to parse a read-only span of characters as a value." /><meta name="tocFile" content="../toc/IDCLC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.CsvTools.Mappings</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Int<wbr />16Converter<span id="LST824355DD_0" data-languageSpecificText="cpp=::|nu=."></span>Try<wbr />Parse Method</h1><div class="summary">
            Tries to parse a read-only span of characters as a <span class="parameter">T</span> value.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="49476974-f7a7-3b27-3f36-82388c34e0d9.htm">FolkerKinzel.CsvTools.Mappings.TypeConverters</a><br /><strong>Assembly:</strong> FolkerKinzel.CsvTools.Mappings (in FolkerKinzel.CsvTools.Mappings.dll) Version: 1.0.1+7a08d367f6cb49af152c22ddb6500601594486e9<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">override</span> <span class="identifier">bool</span> <span class="identifier">TryParse</span>(
	<span class="identifier">ReadOnlySpan</span>&lt;<span class="identifier">char</span>&gt; <span class="parameter">value</span>,
	<span class="keyword">out</span> <span class="identifier">short</span> <span class="parameter">result</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">Overrides</span> <span class="keyword">Function</span> <span class="identifier">TryParse</span> ( 
	<span class="parameter">value</span> <span class="keyword">As</span> <span class="identifier">ReadOnlySpan</span>(<span class="keyword">Of</span> <span class="identifier">Char</span>),
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">result</span> <span class="keyword">As</span> <span class="identifier">Short</span>
) <span class="keyword">As</span> <span class="identifier">Boolean</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
<span class="keyword">virtual</span> <span class="identifier">bool</span> <span class="identifier">TryParse</span>(
	<span class="identifier">ReadOnlySpan</span>&lt;<span class="identifier">wchar_t</span>&gt; <span class="parameter">value</span>, 
	[<span class="identifier">OutAttribute</span>] <span class="identifier">short</span>% <span class="parameter">result</span>
) <span class="keyword">override</span></code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs"><span class="keyword">abstract</span> <span class="identifier">TryParse</span> : 
        <span class="parameter">value</span> : <span class="identifier">ReadOnlySpan</span>&lt;<span class="identifier">char</span>&gt; * 
        <span class="parameter">result</span> : <span class="identifier">int16</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="identifier">bool</span> 
<span class="keyword">override</span> <span class="identifier">TryParse</span> : 
        <span class="parameter">value</span> : <span class="identifier">ReadOnlySpan</span>&lt;<span class="identifier">char</span>&gt; * 
        <span class="parameter">result</span> : <span class="identifier">int16</span> <span class="keyword">byref</span> <span class="keyword">-&gt;</span> <span class="identifier">bool</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">value</span>  <a href="https://learn.microsoft.com/dotnet/api/system.readonlyspan-1" target="_blank" rel="noopener noreferrer">ReadOnlySpan</a><span id="LST824355DD_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.char" target="_blank" rel="noopener noreferrer">Char</a><span id="LST824355DD_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd>The read-only span of characters to parse.</dd><dt class="has-text-weight-normal"><span class="parameter">result</span>  <a href="https://learn.microsoft.com/dotnet/api/system.int16" target="_blank" rel="noopener noreferrer">Int16</a><span id="LST824355DD_3" data-languageSpecificText="cpp=%"></span></dt><dd>
            After the method returns, contains the <span class="parameter">T</span> value that is equivalent 
            to the parsed <span class="parameter">value</span>, if the parsing succeeds, or the default value of 
            <span class="parameter">T</span> if the parsing failed.
            </dd></dl><h4 class="quickLinkHeader">Return Value</h4><a href="https://learn.microsoft.com/dotnet/api/system.boolean" target="_blank" rel="noopener noreferrer">Boolean</a><br /><span class="code">true</span> if the parsing was successfull, otherwise <span class="code">false</span>.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDECSection"><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Notes to Implementers</p></div><div class="message-body">
            Implement this method in derived classes to determine the behavior of 
            <a href="3ff81472-be0d-3069-738a-4db21bb449a5.htm">Parse(ReadOnlySpan<span id="LST824355DD_4" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST824355DD_5" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>)</a>.
            <p /><p>
            In any case the method MUST NOT throw an exception. Instead, it should return <span class="code">false</span> 
            if parsing fails. In this case <span class="parameter">result</span> is treated as undefined.
            </p></div></article></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDFCSection"><p>
            Writing an own implementation of <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter<span id="LST824355DD_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST824355DD_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> is easy: 
            </p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using FolkerKinzel.CsvTools.Mappings.TypeConverters;
using System.Globalization;

namespace Examples;

/// &lt;summary&gt;
/// Example implementation of &lt;see cref="TypeConverter{T}"/&gt; for the
/// &lt;see cref="Int128"/&gt; struct.
/// &lt;/summary&gt;
public sealed class Int128Converter() : TypeConverter&lt;Int128&gt;(true, default)
{
    public override bool AcceptsNull =&gt; false;

    public override string? ConvertToString(Int128 value)
        =&gt; value.ToString(null, CultureInfo.InvariantCulture);

    public override bool TryParse(ReadOnlySpan&lt;char&gt; value, out Int128 result)
        =&gt; Int128.TryParse(value, out result);
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="aa305012-0fa9-080f-c164-303d09221453.htm">Int16Converter Class</a></div><div><a href="49476974-f7a7-3b27-3f36-82388c34e0d9.htm">FolkerKinzel.CsvTools.Mappings.TypeConverters Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Return Value</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>
<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>EnumConverter&lt;TEnum&gt; Class</title><meta name="Title" content="EnumConverter&lt;TEnum&gt;" /><meta name="Help.Id" content="T:FolkerKinzel.CsvTools.Mappings.TypeConverters.EnumConverter`1" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.CsvTools.Mappings.TypeConverters" /><meta name="guid" content="f1b61fb6-bbbd-bc10-713b-bd87770deda8" /><meta name="Description" content="Generic implementation for enum types." /><meta name="tocFile" content="../toc/IDC.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.CsvTools.Mappings</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Enum<wbr />Converter<span id="LST29CBCC9C_0" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="typeparameter">TEnum</span><span id="LST29CBCC9C_1" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span> Class</h1><div class="summary">
            Generic <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter<span id="LST29CBCC9C_2" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_3" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> implementation for <span class="code">enum</span> types.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="49476974-f7a7-3b27-3f36-82388c34e0d9.htm">FolkerKinzel.CsvTools.Mappings.TypeConverters</a><br /><strong>Assembly:</strong> FolkerKinzel.CsvTools.Mappings (in FolkerKinzel.CsvTools.Mappings.dll) Version: 1.0.0-beta.1+df54185deedead2d7b235eeb99a2470373a685db<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">sealed</span> <span class="keyword">class</span> <span class="identifier">EnumConverter</span>&lt;TEnum&gt; : <span class="identifier">TypeConverter</span>&lt;TEnum&gt;
<span class="keyword">where</span> TEnum : <span class="keyword">struct</span>, <span class="keyword">new</span>()
</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb"><span class="keyword">Public</span> <span class="keyword">NotInheritable</span> <span class="keyword">Class</span> <span class="identifier">EnumConverter</span>(<span class="keyword">Of</span> TEnum <span class="keyword">As</span> {<span class="keyword">Structure</span>, <span class="keyword">New</span>})
	<span class="keyword">Inherits</span> <span class="identifier">TypeConverter</span>(<span class="keyword">Of</span> TEnum)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">generic</span>&lt;<span class="keyword">typename</span> TEnum&gt;
<span class="keyword">where</span> TEnum : <span class="keyword">value class</span>, <span class="keyword">gcnew</span>()
<span class="keyword">public</span> <span class="keyword">ref class</span> <span class="identifier">EnumConverter</span> <span class="keyword">sealed</span> : <span class="keyword">public</span> <span class="identifier">TypeConverter</span>&lt;TEnum&gt;</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">SealedAttribute</span>&gt;]
<span class="keyword">type</span> <span class="identifier">EnumConverter</span>&lt;'TEnum <span class="keyword">when</span> 'TEnum : <span class="keyword">struct</span>, <span class="keyword">new</span>()&gt; = 
    <span class="keyword">class</span>
        <span class="keyword">inherit</span> <span class="identifier">TypeConverter</span>&lt;'TEnum&gt;
    <span class="keyword">end</span></code></pre></div></div><dl class="inheritanceHierarchy"><dt>Inheritance</dt><dd><a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter</a><span id="LST29CBCC9C_4" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><span class="selflink"><span class="typeparameter">TEnum</span></span><span id="LST29CBCC9C_5" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>  <span class="icon is-small"><i class="fa fa-arrow-right"></i></span>  <span class="selflink">EnumConverter<span id="LST29CBCC9C_6" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEnum<span id="LST29CBCC9C_7" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span></dd></dl><h4>Type Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">TEnum</span></dt><dd>The .NET enum data type the <span class="selflink">EnumConverter<span id="LST29CBCC9C_8" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEnum<span id="LST29CBCC9C_9" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span>
            can convert.</dd></dl></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDCCSection"><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Note</p></div><div class="message-body">In the following code examples - for easier readability - exception handling has been omitted.</div></article><p>
            Saving the contents of a <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> as a CSV file and importing data from a CSV file into a 
            <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a>: </p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using FolkerKinzel.CsvTools;
using FolkerKinzel.CsvTools.Mappings;
// A namespace alias helps to avoid name conflicts
// with the converters from System.ComponentModel
using Conv = FolkerKinzel.CsvTools.Mappings.TypeConverters;
using System.Data;
using System.Globalization;

namespace Examples;

internal static class DataTableExample
{
    public static void DataTableWriteReadCsv(string filePath)
    {
        using var dataTable = new DataTable();

        dataTable.Columns.Add(new DataColumn("not_used", typeof(int)));
        dataTable.Columns.Add(new DataColumn("name"));
        dataTable.Columns.Add(new DataColumn("subject"));
        dataTable.Columns.Add(new DataColumn("day", typeof(DayOfWeek)));
        dataTable.Columns.Add(new DataColumn("lesson start", typeof(TimeOnly)));

        // The DataColumn.Caption property allows you to override the DataColumn.ColumnName property
        // when the ColumnName does not meet C# identifier requirements. The values ​​of the
        // DataColumn.Caption properties must be unique for CSV serialization (case-insensitive,
        // like DataColumn.ColumnName).
        dataTable.Columns["lesson start"]!.Caption = "begin";

        _ = dataTable.Rows.Add(
            [4711, "Susi Meyer", "Piano", DayOfWeek.Wednesday, new TimeOnly(14, 30, 0)]);
        _ = dataTable.Rows.Add(
            [0, "Carl Czerny", "Piano", DayOfWeek.Thursday, new TimeOnly(15, 15, 0)]);
        _ = dataTable.Rows.Add(
            [111, "Frederic Chopin", "Piano"]);

        // Store the stringConverter because you can reuse the same 
        // converter for more than one property in CsvRecordWrapper.
        Conv::TypeConverter&lt;object&gt; stringConverter
            = Conv::StringConverter.CreateNullable().ToDBNullConverter();

        // Each dynamic property name of the Mapping has to have a corresponding column in
        // the DataTable - corresponding in the DataColumn.Caption property (case-insensitive)
        // and the accepted data type. Mapping properties and DataColumns don't need to
        // correspond in their number and order and they don't need to match the columns of
        // the CSV file:
        CsvMapping mapping = CsvMappingBuilder
            .Create()
            .AddProperty("Name", stringConverter)
            .AddProperty("Subject", stringConverter)
            .AddProperty("Day", new Conv::EnumConverter&lt;DayOfWeek&gt;(format: "G")
                                .ToNullableConverter()
                                .ToDBNullConverter())
            .AddProperty("Begin", ["begin", "*start"], new Conv::TimeOnlyConverter()
                                                       .ToNullableConverter()
                                                       .ToDBNullConverter())
            .Build();

        // Write the CSV file:
        // (The column names determine which DataColumns will be part of the CSV
        // and their order in the CSV file.)
        dataTable.WriteCsv(filePath, 
                           ["Subject", "Lesson Start", "Name", "Day", "Reserved"],
                           mapping);

        dataTable.Clear();

        // Refill the DataTable from the CSV-file:
        dataTable.ReadCsv(filePath, mapping);

        Console.WriteLine("Csv file:");
        Console.WriteLine();
        Console.WriteLine(File.ReadAllText(filePath));

        WriteConsole(dataTable);
    }

    private static void WriteConsole(DataTable dataTable)
    {
        Console.WriteLine();
        Console.WriteLine("Content of the refilled DataTable:");

        foreach (DataRow? dataRow in dataTable.Rows)
        {
            if (dataRow is null)
            {
                continue;
            }

            const int padding = 15;

            for (int i = 0; i &lt; dataTable.Columns.Count; i++)
            {
                object o = dataRow[i];
                Console.Write(o switch
                {
                    null =&gt; "&lt;null&gt;".PadRight(padding),
                    DBNull dBNull =&gt; "&lt;DBNull&gt;".PadRight(padding),
                    string s when s.Length == 0 =&gt; "\"\"".PadRight(padding),
                    TimeOnly ts =&gt; ts.ToString(CultureInfo.InvariantCulture).PadRight(padding),
                    _ =&gt; o.ToString()?.PadRight(padding)
                });
                Console.Write(' ');
            }

            Console.WriteLine();
        }
    }

    /* 
   Console output:

   Csv file:

   Subject,Lesson Start,Name,Day,Reserved
   Piano,14:30:00,Susi Meyer,Wednesday,
   Piano,15:15:00,Carl Czerny,Thursday,
   Piano,,Frederic Chopin,,

   Content of the refilled DataTable:
   &lt;DBNull&gt;        Susi Meyer      Piano           3               14:30
   &lt;DBNull&gt;        Carl Czerny     Piano           4               15:15
   &lt;DBNull&gt;        Frederic Chopin Piano           &lt;DBNull&gt;        &lt;DBNull&gt;
   */
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Constructors</h2><div id="IDJFASection"><table id="ConstructorList" class="table is-hoverable"><tr><td><a href="7b86a082-8c86-58fd-e984-f61061337dc5.htm">EnumConverter<span id="LST29CBCC9C_10" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEnum<span id="LST29CBCC9C_11" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a></td><td>
            Initializes a new <span class="selflink">EnumConverter<span id="LST29CBCC9C_12" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>TEnum<span id="LST29CBCC9C_13" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></span> instance.
            </td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Properties</h2><div id="IDRFASection"><table id="PropertyList" class="table is-hoverable"><tr><td><a href="8910226f-cd1a-b586-8653-d8b2f8693dab.htm">AcceptsNull</a></td><td>
            Gets a value indicating whether the converter accepts 
            <span class="code">null</span> references as input.
            <br />(Overrides <a href="7800bdda-0a35-26cb-45c8-96ff10b03423.htm">TypeConverter<span id="LST29CBCC9C_14" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_15" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST29CBCC9C_16" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>AcceptsNull</a>)</td></tr><tr><td><a href="c039d777-4a20-eaee-b46b-ade24a7f90e5.htm">DataType</a></td><td>
            The data type the converter converts.
            <br />(Inherited from <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter<span id="LST29CBCC9C_17" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_18" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><a href="7f4b11f0-28c3-4719-760d-f1f38299d48e.htm">DefaultValue</a></td><td>
            Gets the value to return if the parser finds no data in the CSV,
            or if parsing fails and
            the <a href="60288c71-01a8-e2cf-b532-efe7c035dc96.htm">Throwing</a> property is <span class="code">false</span>.
            <br />(Inherited from <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter<span id="LST29CBCC9C_19" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_20" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><a href="09ba2af2-eea9-c7ea-a90c-fee0c31adcc0.htm">Format</a></td><td>
            Gets the format string to use.
            </td></tr><tr><td><a href="53251ce4-2c5c-18b1-130d-205cf452383e.htm">IgnoreCase</a></td><td>
            Gets a value that indicates whether the parser takes casing into account.
            </td></tr><tr><td><a href="7a464894-c247-f627-be65-158b511260a8.htm">Throwing</a></td><td>
            Gets a value indicating whether the converter throws a
            <a href="https://learn.microsoft.com/dotnet/api/system.formatexception" target="_blank" rel="noopener noreferrer">FormatException</a> 
            when a parsing error occurs, or if it returns 
            <a href="bda3544c-2f7f-6b3a-f096-07677302f45b.htm">DefaultValue</a> value instead.
            <br />(Inherited from <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter<span id="LST29CBCC9C_21" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_22" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Methods</h2><div id="IDKFASection"><table id="MethodList" class="table is-hoverable"><tr><td><a href="62ff05e0-c933-8214-e2f6-e8309be0157a.htm">ConvertToString</a></td><td>
            Converts <span class="parameter">value</span> to a <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a> or <span class="code">null</span>.
            <br />(Overrides <a href="73c08b5c-2ed6-4c17-0c32-2f499bc8b434.htm">TypeConverter<span id="LST29CBCC9C_23" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_24" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST29CBCC9C_25" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>ConvertToString(T)</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)" target="_blank" rel="noopener noreferrer">Equals</a></td><td>Determines whether the specified object is equal to the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gethashcode" target="_blank" rel="noopener noreferrer">GetHashCode</a></td><td>Serves as the default hash function.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.gettype" target="_blank" rel="noopener noreferrer">GetType</a></td><td>Gets the <a href="https://learn.microsoft.com/dotnet/api/system.type" target="_blank" rel="noopener noreferrer">Type</a> of the current instance.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="3ff81472-be0d-3069-738a-4db21bb449a5.htm">Parse</a></td><td>
            Parses a read-only span of characters and returns 
            the corresponding .NET object.
            <br />(Inherited from <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter<span id="LST29CBCC9C_26" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_27" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a>)</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.object.tostring" target="_blank" rel="noopener noreferrer">ToString</a></td><td>Returns a string that represents the current object.<br />(Inherited from <a href="https://learn.microsoft.com/dotnet/api/system.object" target="_blank" rel="noopener noreferrer">Object</a>)</td></tr><tr><td><a href="e2576580-07b1-7245-7892-6eba3a486f2b.htm">TryParse</a></td><td>
            Tries to parse a read-only span of characters as a <span class="parameter">T</span> value.
            <br />(Overrides <a href="b6501999-0e17-cea4-e1e7-4c2ac9eb1c82.htm">TypeConverter<span id="LST29CBCC9C_28" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_29" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span><span id="LST29CBCC9C_30" data-languageSpecificText="cs=.|vb=.|cpp=::|nu=.|fs=."></span>TryParse(ReadOnlySpan<span id="LST29CBCC9C_31" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>Char<span id="LST29CBCC9C_32" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span>, T<span id="LST29CBCC9C_33" data-languageSpecificText="cpp=%"></span>)</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Extension Methods</h2><div id="IDAFASection"><table id="ExtensionList" class="table is-hoverable"><tr><td><a href="0e7d6b4b-5c91-af71-e117-eea5a3af98c9.htm">ToArrayConverter<span id="LST29CBCC9C_34" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_35" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a new array converter instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr><tr><td><a href="1eff7f8c-2604-5c63-496d-45538a5f8947.htm">ToDBNullConverter<span id="LST29CBCC9C_36" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_37" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Returns a <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter&lt;<referenceLink target="T:System.Object" />&gt;</a>
            instance
            that converts and accepts <span class="parameter">T</span> as well as 
            <a href="https://learn.microsoft.com/dotnet/api/system.dbnull.value" target="_blank" rel="noopener noreferrer">DBNull.Value</a>.
            <a href="https://learn.microsoft.com/dotnet/api/system.dbnull.value" target="_blank" rel="noopener noreferrer">DBNull.Value</a> is the 
            <a href="7f4b11f0-28c3-4719-760d-f1f38299d48e.htm">DefaultValue</a> of this <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter<span id="LST29CBCC9C_38" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_39" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr><tr><td><a href="eb0aceea-69e6-5c83-0b18-502419eaad73.htm">ToICollectionConverter<span id="LST29CBCC9C_40" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_41" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a new <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1" target="_blank" rel="noopener noreferrer">ICollection<span id="LST29CBCC9C_42" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_43" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> converter instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr><tr><td><a href="ffcbf906-fb88-15c2-fd35-c47ed8c55043.htm">ToIEnumerableConverter<span id="LST29CBCC9C_44" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_45" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a new <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1" target="_blank" rel="noopener noreferrer">IEnumerable<span id="LST29CBCC9C_46" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_47" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> converter instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr><tr><td><a href="9ec4d592-0138-4bef-a7fa-0b098c849332.htm">ToIListConverter<span id="LST29CBCC9C_48" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_49" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a new <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1" target="_blank" rel="noopener noreferrer">IList<span id="LST29CBCC9C_50" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_51" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> converter instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr><tr><td><a href="2961b2cc-0c37-15eb-24a5-a4f6974296c9.htm">ToIReadOnlyCollectionConverter<span id="LST29CBCC9C_52" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_53" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a new <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1" target="_blank" rel="noopener noreferrer">IReadOnlyCollection<span id="LST29CBCC9C_54" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_55" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> converter instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr><tr><td><a href="329abe1d-42a8-86ed-0056-aca7611c6475.htm">ToIReadOnlyListConverter<span id="LST29CBCC9C_56" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_57" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a new <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1" target="_blank" rel="noopener noreferrer">IReadOnlyList<span id="LST29CBCC9C_58" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_59" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> converter instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr><tr><td><a href="975d7aff-d5b8-bdc7-76d2-578f45cb3273.htm">ToListConverter<span id="LST29CBCC9C_60" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_61" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a new <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1" target="_blank" rel="noopener noreferrer">List<span id="LST29CBCC9C_62" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_63" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> converter instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr><tr><td><a href="5a59c2d2-58fa-a1e6-f504-5c054a4fa59d.htm">ToReadOnlyCollectionConverter<span id="LST29CBCC9C_64" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=("></span>TEnum<span id="LST29CBCC9C_65" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)"></span></a></td><td>
            Creates a new <a href="https://learn.microsoft.com/dotnet/api/system.collections.objectmodel.readonlycollection-1" target="_blank" rel="noopener noreferrer">ReadOnlyCollection<span id="LST29CBCC9C_66" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST29CBCC9C_67" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> converter instance.
            <br />(Defined by <a href="c092ee4a-4511-7daf-980a-ae4b30cbf2ef.htm">TypeConverterExtension</a>)</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="49476974-f7a7-3b27-3f36-82388c34e0d9.htm">FolkerKinzel.CsvTools.Mappings.TypeConverters Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Constructors</a></li><li><a class="quickLink">Properties</a></li><li><a class="quickLink">Methods</a></li><li><a class="quickLink">Extension Methods</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>
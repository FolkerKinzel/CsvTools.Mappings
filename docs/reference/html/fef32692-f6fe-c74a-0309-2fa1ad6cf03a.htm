<!DOCTYPE html ><html lang="en-US"><head><meta charset="utf-8" /><meta name="viewport" content="width=device-width, initial-scale=1" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" href="../css/bulma.css" /><link rel="stylesheet" href="../css/font-awesome.min.css" /><link rel="stylesheet" href="../css/presentationStyle.css" /><link rel="stylesheet" href="../css/vs.min.css" /><script src="../scripts/jquery-3.5.1.min.js"></script><script src="../scripts/clipboard.min.js"></script><script src="../scripts/highlight.min.js"></script><script src="../scripts/presentationStyle.js"></script><title>DataTableExtension.WriteCsv(DataTable, String, IReadOnlyCollection&lt;String&gt;, CsvRecordMapping) Method</title><meta name="Title" content="WriteCsv(DataTable, String, IReadOnlyCollection&lt;String&gt;, CsvRecordMapping)" /><meta name="Help.Id" content="M:FolkerKinzel.CsvTools.Mappings.DataTableExtension.WriteCsv(System.Data.DataTable,System.String,System.Collections.Generic.IReadOnlyCollection{System.String},FolkerKinzel.CsvTools.Mappings.CsvRecordMapping)" /><meta name="Help.ContentType" content="Reference" /><meta name="container" content="FolkerKinzel.CsvTools.Mappings" /><meta name="guid" content="fef32692-f6fe-c74a-0309-2fa1ad6cf03a" /><meta name="Description" content="Writes the content of a as a CSV file with header." /><meta name="tocFile" content="../toc/IDCAGB.xml" /></head><body><div class="fixedLayout"><div id="Header" class="fixedHeader"><div class="pageHeader level mb-0 py-2 px-4"><div id="TitleContainer" class="level-left"><div class="level-item"><img src="../icons/Help.png" /></div><div id="DocumentationTitle" class="level-item">FolkerKinzel.CsvTools.Mappings</div></div><div id="LangFilterSearchContainer" class="level-right"><div class="level-item"><div class="dropdown is-hoverable"><div class="dropdown-trigger"><button class="button" aria-haspopup="true" aria-controls="dropdown-menu"><span id="CurrentLanguage"></span><span class="icon is-small"><i class="fa fa-angle-down" aria-hidden="true"></i></span></button></div><div class="dropdown-menu" role="menu"><div id="LanguageSelections" class="dropdown-content"><a class="dropdown-item languageFilterItem" data-languageId="cs">C#</a><a class="dropdown-item languageFilterItem" data-languageId="vb">VB</a><a class="dropdown-item languageFilterItem" data-languageId="cpp">C++</a><a class="dropdown-item languageFilterItem" data-languageId="fs">F#</a></div></div></div></div><div class="level-item"><form id="SearchForm" action="#" onsubmit="TransferToSearchPage(); return false;"><div class="field"><div class="control has-icons-left"><input id="SearchTerms" class="input" type="text" maxlength="200" placeholder="Search" /><span class="icon is-small is-left"><i class="fa fa-search"></i></span><button id="SearchButton" type="submit" class="is-hidden"></button></div></div></form></div></div></div></div><div class="fixedContent"><nav class="breadcrumb my-1 px-2 border-bottom" role="navigation"><ul id="TopicBreadcrumbs" /></nav><div id="ContentContainer" class="columns pl-5 pr-5 fixedContent"><div id="ShowHideTOCColumn" class="column is-hidden-tablet"><a id="ShowHideTOC">Show/Hide TOC</a></div><div id="TOCColumn" class="column is-hidden-mobile"><nav class="toc"><ul id="TableOfContents" class="toc-menu" /></nav></div><div id="Resizer" class="is-hidden"></div><div id="TopicContent" class="column content is-7"><h1>Data<wbr />Table<wbr />Extension<span id="LST21C11593_0" data-languageSpecificText="cpp=::|nu=."></span>Write<wbr />Csv(Data<wbr />Table, String, IRead<wbr />Only<wbr />Collection<span id="LST21C11593_1" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span>String<span id="LST21C11593_2" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span>, Csv<wbr />Record<wbr />Mapping) Method</h1><div class="summary">
            Writes the content of a <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> as a CSV file with header.
            </div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Definition</h2><div id="IDBSection"><strong>Namespace:</strong> <a href="36bca041-1217-8659-0718-bf83af638a0c.htm">FolkerKinzel.CsvTools.Mappings</a><br /><strong>Assembly:</strong> FolkerKinzel.CsvTools.Mappings (in FolkerKinzel.CsvTools.Mappings.dll) Version: 1.0.0-beta.1+128444f87360f5bbc1bb29064bf5b8703b7533db<div class="codeSnippet" data-codeSnippetLanguage="cs"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">WriteCsv</span>(
	<span class="keyword">this</span> <span class="identifier">DataTable</span> <span class="parameter">dataTable</span>,
	<span class="identifier">string</span> <span class="parameter">filePath</span>,
	<span class="identifier">IReadOnlyCollection</span>&lt;<span class="identifier">string</span>?&gt; <span class="parameter">columnNames</span>,
	<span class="identifier">CsvRecordMapping</span> <span class="parameter">mapping</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="vb"><div class="codeHeader"><span class="codeHeaderTitle">VB</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-vb">&lt;<span class="identifier">ExtensionAttribute</span>&gt;
<span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Sub</span> <span class="identifier">WriteCsv</span> ( 
	<span class="parameter">dataTable</span> <span class="keyword">As</span> <span class="identifier">DataTable</span>,
	<span class="parameter">filePath</span> <span class="keyword">As</span> <span class="identifier">String</span>,
	<span class="parameter">columnNames</span> <span class="keyword">As</span> <span class="identifier">IReadOnlyCollection</span>(<span class="keyword">Of</span> <span class="identifier">String</span>),
	<span class="parameter">mapping</span> <span class="keyword">As</span> <span class="identifier">CsvRecordMapping</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="cpp"><div class="codeHeader"><span class="codeHeaderTitle">C++</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cpp"><span class="keyword">public</span>:
[<span class="identifier">ExtensionAttribute</span>]
<span class="keyword">static</span> <span class="keyword">void</span> <span class="identifier">WriteCsv</span>(
	<span class="identifier">DataTable</span>^ <span class="parameter">dataTable</span>, 
	<span class="identifier">String</span>^ <span class="parameter">filePath</span>, 
	<span class="identifier">IReadOnlyCollection</span>&lt;<span class="identifier">String</span>^&gt;^ <span class="parameter">columnNames</span>, 
	<span class="identifier">CsvRecordMapping</span>^ <span class="parameter">mapping</span>
)</code></pre></div></div><div class="codeSnippet is-hidden" data-codeSnippetLanguage="fs"><div class="codeHeader"><span class="codeHeaderTitle">F#</span><span class="buttons"><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></span></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-fs">[&lt;<span class="identifier">ExtensionAttribute</span>&gt;]
<span class="keyword">static</span> <span class="keyword">member</span> <span class="identifier">WriteCsv</span> : 
        <span class="parameter">dataTable</span> : <span class="identifier">DataTable</span> * 
        <span class="parameter">filePath</span> : <span class="identifier">string</span> * 
        <span class="parameter">columnNames</span> : <span class="identifier">IReadOnlyCollection</span>&lt;<span class="identifier">string</span>&gt; * 
        <span class="parameter">mapping</span> : <span class="identifier">CsvRecordMapping</span> <span class="keyword">-&gt;</span> <span class="keyword">unit</span> </code></pre></div></div><h4 class="quickLinkHeader">Parameters</h4><dl><dt class="has-text-weight-normal"><span class="parameter">dataTable</span>  <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a></dt><dd>The <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> whose content is written.</dd><dt class="has-text-weight-normal"><span class="parameter">filePath</span>  <a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a></dt><dd>File path of the CSV file.</dd><dt class="has-text-weight-normal"><span class="parameter">columnNames</span>  <a href="https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1" target="_blank" rel="noopener noreferrer">IReadOnlyCollection</a><span id="LST21C11593_3" data-languageSpecificText="cpp=&lt;|cs=&lt;|fs=&lt;|vb=(Of |nu=("></span><a href="https://learn.microsoft.com/dotnet/api/system.string" target="_blank" rel="noopener noreferrer">String</a><span id="LST21C11593_4" data-languageSpecificText="cpp=&gt;|cs=&gt;|fs=&gt;|vb=)|nu=)"></span></dt><dd><p>
            A collection of column names for the header to be written.
            </p><p>
            The collection determines the order in which the columns appear in the CSV file.
            </p><p>
            The collection will be copied. If the collection contains <span class="code">null</span> values, empty strings or white space, these 
            are replaced by automatically generated column names. Column names cannot appear twice. By default the 
            comparison is case-sensitive but it will be reset to a case-insensitive comparison if the column names are 
            also unique when treated case-insensitive.
            </p></dd><dt class="has-text-weight-normal"><span class="parameter">mapping</span>  <a href="f9d417b0-c675-a792-e538-87759eab8ed7.htm">CsvRecordMapping</a></dt><dd>The <a href="f9d417b0-c675-a792-e538-87759eab8ed7.htm">CsvRecordMapping</a> to be used.</dd></dl><h4 class="quickLinkHeader">Usage Note</h4>In Visual Basic and C#, you can call this method as an instance method on any object of type <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a>. When you use instance method syntax to call this method, omit the first parameter. For more information, see <a href="https://docs.microsoft.com/dotnet/visual-basic/programming-guide/language-features/procedures/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (Visual Basic)</a> or <a href="https://docs.microsoft.com/dotnet/csharp/programming-guide/classes-and-structs/extension-methods" target="_blank" rel="noopener noreferrer">Extension Methods (C# Programming Guide)</a>.</div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Remarks</h2><div id="IDFCSection"><p>Creates a new CSV file. If the target file already exists, it is 
            truncated and overwritten.
            </p><p>
            This method initializes a <a href="416743f7-8d1c-a088-f0a1-ad88a32faeb1.htm">CsvWriter</a> instance that uses the comma ',' (%x2C) as field delimiter.
            This complies with the RFC 4180 standard. If another delimiter is required, use <a href="6030f14b-7a2d-4100-35e4-8cdc0c8137ea.htm">WriteCsv(DataTable, CsvWriter, CsvRecordMapping)</a>
            instead.
            </p><p>
            Each <a href="01d6256d-bb76-35c9-4f82-60a9f3a876b7.htm">PropertyName</a> of <span class="parameter">mapping</span>
            MUST have a corresponding <a href="https://learn.microsoft.com/dotnet/api/system.data.datacolumn" target="_blank" rel="noopener noreferrer">DataColumn</a> in <span class="parameter">dataTable</span>
            - corresponding in the <a href="https://learn.microsoft.com/dotnet/api/system.data.datacolumn.caption" target="_blank" rel="noopener noreferrer">Caption</a> property (case-insensitive)
            and the accepted data type.
            </p><p>
            Effort must be taken that the 
            <a href="01d6256d-bb76-35c9-4f82-60a9f3a876b7.htm">PropertyName</a>s in <span class="parameter">mapping</span> are unique, 
            even when treated case-insensitive.
            </p><p>
            The <a href="dc1efb76-ccb1-38fb-cd92-12937a874421.htm">DynamicProperty</a> instances in <span class="parameter">mapping</span> don't need to match 
            all columns of the <a href="https://learn.microsoft.com/dotnet/api/system.data.datatable" target="_blank" rel="noopener noreferrer">DataTable</a> or all columns of the CSV file (neither in
            number nor in order).
            </p></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Example</h2><div id="IDGCSection"><article class="message is-info"><div class="message-header"><p><span class="icon"><i class="fa fa-info-circle"></i></span>  Note</p></div><div class="message-body">In the following code examples - for easier readability - exception handling 
            has been omitted.</div></article><p>DataTable serialization with CSV:</p><div class="codeSnippet"><div class="codeHeader"><span class="codeHeaderTitle">C#</span><button class="button is-small is-light copyCode" title="Copy"><span class="icon is-small"><i class="fa fa-copy"></i></span><span>Copy</span></button></div><div class="codePanel hljs"><pre xml:space="preserve"><code class="language-cs">using FolkerKinzel.CsvTools;
using FolkerKinzel.CsvTools.Mappings;
// A namespace alias helps to avoid name conflicts
// with the converters from System.ComponentModel
using Conv = FolkerKinzel.CsvTools.Mappings.TypeConverters;
using System.Data;
using System.Globalization;

namespace Examples;

internal static class DataTableExample
{
    public static void DataTableWriteReadCsv(string filePath)
    {
        using var dataTable = new DataTable();

        dataTable.Columns.Add(new DataColumn("not_used", typeof(int)));
        dataTable.Columns.Add(new DataColumn("name"));
        dataTable.Columns.Add(new DataColumn("subject"));
        dataTable.Columns.Add(new DataColumn("day", typeof(DayOfWeek)));
        dataTable.Columns.Add(new DataColumn("lesson start", typeof(TimeOnly)));

        // The DataColumn.Caption property allows you to override the DataColumn.ColumnName property
        // when the ColumnName does not meet C# identifier requirements. The values ​​of the
        // DataColumn.Caption properties must be unique for CSV serialization (case-insensitive,
        // like DataColumn.ColumnName).
        dataTable.Columns["lesson start"]!.Caption = "begin";

        _ = dataTable.Rows.Add(
            [4711, "Susi Meyer", "Piano", DayOfWeek.Wednesday, new TimeOnly(14, 30, 0)]);
        _ = dataTable.Rows.Add(
            [0, "Carl Czerny", "Piano", DayOfWeek.Thursday, new TimeOnly(15, 15, 0)]);
        _ = dataTable.Rows.Add(
            [111, "Frederic Chopin", "Piano"]);

        // Store the stringConverter because you can reuse the same 
        // converter for more than one property in CsvRecordWrapper.
        Conv::TypeConverter&lt;object&gt; stringConverter
            = Conv::StringConverter.CreateNullable().ToDBNullConverter();

        // Each dynamic property name of the Mapping has to have a corresponding column in
        // the DataTable - corresponding in the DataColumn.Caption property (case-insensitive)
        // and the accepted data type. Mapping properties and DataColumns don't need to
        // correspond in their number and order and they don't need to match the columns of
        // the CSV file:
        CsvRecordMapping mapping = CsvRecordMappingBuilder
            .Create()
            .AddProperty("Name", stringConverter)
            .AddProperty("Subject", stringConverter)
            .AddProperty("Day", new Conv::EnumConverter&lt;DayOfWeek&gt;(format: "G")
                                .ToNullableConverter()
                                .ToDBNullConverter())
            .AddProperty("Begin", ["begin", "*start"], new Conv::TimeOnlyConverter()
                                                       .ToNullableConverter()
                                                       .ToDBNullConverter())
            .Build();

        // Write the CSV file:
        // (The column names determine which DataColumns will be part of the CSV
        // and their order in the CSV file.)
        dataTable.WriteCsv(filePath, 
                           ["Subject", "Lesson Start", "Name", "Day", "Reserved"],
                           mapping);

        dataTable.Clear();

        // Refill the DataTable from the CSV-file:
        dataTable.ReadCsv(filePath, mapping);

        Console.WriteLine("Csv file:");
        Console.WriteLine();
        Console.WriteLine(File.ReadAllText(filePath));

        WriteConsole(dataTable);
    }

    private static void WriteConsole(DataTable dataTable)
    {
        Console.WriteLine();
        Console.WriteLine("Content of the refilled DataTable:");

        foreach (DataRow? dataRow in dataTable.Rows)
        {
            if (dataRow is null)
            {
                continue;
            }

            const int padding = 15;

            for (int i = 0; i &lt; dataTable.Columns.Count; i++)
            {
                object o = dataRow[i];
                Console.Write(o switch
                {
                    null =&gt; "&lt;null&gt;".PadRight(padding),
                    DBNull dBNull =&gt; "&lt;DBNull&gt;".PadRight(padding),
                    string s when s.Length == 0 =&gt; "\"\"".PadRight(padding),
                    TimeOnly ts =&gt; ts.ToString(CultureInfo.InvariantCulture).PadRight(padding),
                    _ =&gt; o.ToString()?.PadRight(padding)
                });
                Console.Write(' ');
            }

            Console.WriteLine();
        }
    }

    /* 
   Console output:

   Csv file:

   Subject,Lesson Start,Name,Day,Reserved
   Piano,14:30:00,Susi Meyer,Wednesday,
   Piano,15:15:00,Carl Czerny,Thursday,
   Piano,,Frederic Chopin,,

   Content of the refilled DataTable:
   &lt;DBNull&gt;        Susi Meyer      Piano           3               14:30
   &lt;DBNull&gt;        Carl Czerny     Piano           4               15:15
   &lt;DBNull&gt;        Frederic Chopin Piano           &lt;DBNull&gt;        &lt;DBNull&gt;
   */
}</code></pre></div></div></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>Exceptions</h2><div id="IDHCSection"><table class="table is-hoverable"><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentnullexception" target="_blank" rel="noopener noreferrer">ArgumentNullException</a></td><td><span class="parameter">dataTable</span>, or <span class="parameter">filePath</span>,
            or <span class="parameter">columnNames</span>, or <span class="parameter">mapping</span> is <span class="code">null</span>.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.argumentexception" target="_blank" rel="noopener noreferrer">ArgumentException</a></td><td><p><span class="parameter">filePath</span> is not a valid file path.</p><p>- or -</p><p>
            There is a <a href="dc1efb76-ccb1-38fb-cd92-12937a874421.htm">DynamicProperty</a> in <span class="parameter">mapping</span> whose 
            <a href="01d6256d-bb76-35c9-4f82-60a9f3a876b7.htm">PropertyName</a> finds no corresponding <a href="https://learn.microsoft.com/dotnet/api/system.data.datacolumn.columnname" target="_blank" rel="noopener noreferrer">ColumnName</a>
            in <span class="parameter">dataTable</span>.
            </p></td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.invalidcastexception" target="_blank" rel="noopener noreferrer">InvalidCastException</a></td><td>
            A value in <span class="parameter">dataTable</span> does not match the expected data type in 
            <span class="parameter">mapping</span>.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.formatexception" target="_blank" rel="noopener noreferrer">FormatException</a></td><td>
            One of the <a href="4f4d61ef-73fd-6f9c-9735-d13b649e046d.htm">TypeConverter<span id="LST21C11593_5" data-languageSpecificText="cs=&lt;|vb=(Of |cpp=&lt;|nu=(|fs=&lt;'"></span>T<span id="LST21C11593_6" data-languageSpecificText="cs=&gt;|vb=)|cpp=&gt;|nu=)|fs=&gt;"></span></a> instances uses an invalid format string.
            </td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.io.ioexception" target="_blank" rel="noopener noreferrer">IOException</a></td><td>I/O error.</td></tr><tr><td><a href="https://learn.microsoft.com/dotnet/api/system.objectdisposedexception" target="_blank" rel="noopener noreferrer">ObjectDisposedException</a></td><td>The file was already closed.</td></tr></table></div><h2 class="quickLinkHeader"><span class="icon toggleSection" tabindex="0"><i class="fa fa-angle-down"></i></span>See Also</h2><div id="seeAlsoSection"><h4>Reference</h4><div><a href="38796058-ce7d-ee42-ecb2-6f4fd82925b5.htm">DataTableExtension Class</a></div><div><a href="57491f2e-8a0e-c83a-a54b-9a28e68698f7.htm">WriteCsv Overload</a></div><div><a href="36bca041-1217-8659-0718-bf83af638a0c.htm">FolkerKinzel.CsvTools.Mappings Namespace</a></div></div></div><div id="InThisArticleColumn" class="column is-hidden-mobile"><nav class="menu sticky is-hidden"><p class="menu-label"><strong>In This Article</strong></p><ul id="InThisArticleMenu" class="menu-list"><li><a class="quickLink">Definition</a><ul class="menu"><li><a class="quickLink">Parameters</a></li><li><a class="quickLink">Usage Note</a></li></ul></li><li><a class="quickLink">Remarks</a></li><li><a class="quickLink">Example</a></li><li><a class="quickLink">Exceptions</a></li><li><a class="quickLink">See Also</a></li></ul></nav></div></div></div></div><script>$(function(){
SetDefaultLanguage("cs");
LoadTocFile(null, null);
InitializeQuickLinks();

$(".toggleSection" ).click(function () {
    SectionExpandCollapse(this);
});

$(".toggleSection").keypress(function () {
    SectionExpandCollapseCheckKey(this, event)
});
hljs.highlightAll();
});</script></body></html>